# Unique name for this workflow
name: "[PUSH] Create and Install Package in DEVHOT"

# Definition when the workflow should run
on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "force-app/**"

# Jobs to be executed
jobs:
  create-package:
    name: Create new package
    runs-on: ubuntu-latest
    steps:
      # Install SFDX
      - name: Install SFDX
        uses: sfdx-actions/setup-sfdx@v1

      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Authenticate prod
      - name: Authenticate prod
        run: |
          echo ${{ secrets.PROD_SFDX_URL}} > ./PROD_SFDX_URL.txt
          sfdx force:auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a devhub -d
          rm -f ./PROD_SFDX_URL.txt

      # Authenticate DEVHOT
      - name: Authenticate DEVHOT
        run: |
          echo ${{ secrets.DEVHOT_SFDX_URL}} > ./DEVHOT_SFDX_URL.txt
          sfdx force:auth:sfdxurl:store -f ./DEVHOT_SFDX_URL.txt -a devhot -s
          rm -f ./DEVHOT_SFDX_URL.txt

      # Delete unpackagable
      - name: "Delete unpackagable"
        run: |
          rm -rf force-app/unpackagable

      # Create package version
      - name: "Create package version"
        id: package-version-create
        run: |
          sfdx force:package:version:create -f config/project-scratch-def.json -p crm-hot-dev -k ${{ secrets.PACKAGE_KEY }} -w 90 --json | tee output
          echo "::set-output name=result::$(cat output | jq -c .)"

          status=$(cat output |jq '.status')
          if [ $status == "0" ]
          then
            echo "::set-output name=isSuccess::true"
          else
            exit 125
          fi
          rm output

      # Extract data from package version create result
      - name: "Extract package:version:create result data"
        id: extract-data-package-version-create
        uses: muenzpraeger/github-action-extract-sfdx-packaging-result@master
        with:
          json: ${{steps.package-version-create.outputs.result}}

      # Install new package version into devhot
      - name: "Install new package version into devhot"
        id: devhot-installation
        run: |
          sfdx force:package:install --package ${{ steps.extract-data-package-version-create.outputs.packageVersionId }} -w 20 -b 20 -u devhot -r -k ${{ secrets.PACKAGE_KEY }} --json | tee output

          status=$(cat output |jq '.status')

          if [ $status == "0" ]
          then
            echo "::set-output name=isSuccess::true"
          fi
          rm output
