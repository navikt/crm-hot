<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>addToIterator</name>
        <label>addToIterator</label>
        <locationX>410</locationX>
        <locationY>265</locationY>
        <assignmentItems>
            <assignToReference>iterator</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopOverRecords</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>TriggerErrorMessage</name>
        <label>TriggerErrorMessage</label>
        <locationX>665</locationX>
        <locationY>273</locationY>
        <assignmentItems>
            <assignToReference>$Record.HOT_TriggerValidation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>TriggerOverlappingValidation</name>
        <label>TriggerOverlappingValidation</label>
        <locationX>1107</locationX>
        <locationY>340</locationY>
        <assignmentItems>
            <assignToReference>$Record.HOT_HasReservations__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopOverReservations</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>checkNumberOfRecords</name>
        <label>checkNumberOfRecords</label>
        <locationX>654</locationX>
        <locationY>64</locationY>
        <defaultConnector>
            <targetReference>getReservations</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RecordsExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>iterator</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>TriggerErrorMessage</targetReference>
            </connector>
            <label>RecordsExists</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckTimeOverlap</name>
        <label>CheckTimeOverlap</label>
        <locationX>1342</locationX>
        <locationY>331</locationY>
        <defaultConnector>
            <targetReference>LoopOverReservations</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsOverlapping</name>
            <conditionLogic>( (1 AND 2) OR (3 AND 4) OR (5 AND 6) OR (9 AND 10) ) AND 7 AND 8</conditionLogic>
            <conditions>
                <leftValueReference>Reservation.EarliestStartTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>getThisServiceAppointment.EarliestStartTime</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getThisServiceAppointment.EarliestStartTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Reservation.DueDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Reservation.EarliestStartTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>getThisServiceAppointment.DueDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getThisServiceAppointment.DueDate</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Reservation.DueDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getThisServiceAppointment.EarliestStartTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Reservation.EarliestStartTime</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Reservation.DueDate</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>getThisServiceAppointment.DueDate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Reservation.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Annul</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Reservation.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Canceled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Reservation.EarliestStartTime</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>getThisServiceAppointment.EarliestStartTime</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Reservation.DueDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>getThisServiceAppointment.DueDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>TriggerOverlappingValidation</targetReference>
            </connector>
            <label>IsOverlapping</label>
        </rules>
    </decisions>
    <interviewLabel>CheckAssignedResources {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Check Assigned Resources</label>
    <loops>
        <name>LoopOverRecords</name>
        <label>LoopOverRecords</label>
        <locationX>409</locationX>
        <locationY>51</locationY>
        <assignNextValueToReference>assignedResource</assignNextValueToReference>
        <collectionReference>getAssignedResources</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>addToIterator</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>checkNumberOfRecords</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopOverReservations</name>
        <label>LoopOverReservations</label>
        <locationX>1229</locationX>
        <locationY>66</locationY>
        <assignNextValueToReference>Reservation</assignNextValueToReference>
        <collectionReference>getReservations</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CheckTimeOverlap</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getAssignedResources</name>
        <label>getAssignedResources</label>
        <locationX>222</locationX>
        <locationY>54</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopOverRecords</targetReference>
        </connector>
        <filters>
            <field>ServiceAppointmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceAppointmentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AssignedResource</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getReservations</name>
        <label>getReservations</label>
        <locationX>908</locationX>
        <locationY>63</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getThisServiceAppointment</targetReference>
        </connector>
        <filters>
            <field>HOT_ServiceResource__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceResourceId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ServiceAppointment</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getThisServiceAppointment</name>
        <label>getThisServiceAppointment</label>
        <locationX>1029</locationX>
        <locationY>63</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopOverReservations</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceAppointmentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceAppointment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>getAssignedResources</targetReference>
        </connector>
        <object>AssignedResource</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>assignedResource</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AssignedResource</objectType>
    </variables>
    <variables>
        <name>assignedResources</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AssignedResource</objectType>
    </variables>
    <variables>
        <name>hasReservations</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>iterator</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Reservation</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
</Flow>
